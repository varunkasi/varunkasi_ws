// generated from rosidl_adapter/resource/msg.idl.em
// with input from thermal_calibration_interfaces/msg/CalibrationModel.msg
// generated code does not contain a copyright notice

#include "builtin_interfaces/msg/Time.idl"

module thermal_calibration_interfaces {
  module msg {
    @verbatim (language="comment", text=
      "Thermal calibration model")
    struct CalibrationModel {
      @verbatim (language="comment", text=
        "Type of model (e.g., \"polynomial\")")
      string model_type;

      @verbatim (language="comment", text=
        "Degree of polynomial (if applicable)")
      int8 degree;

      @verbatim (language="comment", text=
        "Model parameters/coefficients")
      sequence<float> parameters;

      @verbatim (language="comment", text=
        "R-squared value (coefficient of determination)")
      float r_squared;

      @verbatim (language="comment", text=
        "Root mean square error (in Celsius)")
      float rmse;

      @verbatim (language="comment", text=
        "Number of calibration points used")
      uint32 points_count;

      @verbatim (language="comment", text=
        "When calibration was performed")
      builtin_interfaces::msg::Time timestamp;

      @verbatim (language="comment", text=
        "Min and max raw values covered [min, max]")
      sequence<uint16> raw_value_range;
    };
  };
};
